class solution:
    def calculate(self, s):
        def update(op, v):
            if op == "+": stack.append(v)
            if op == "-": stack.append(-v)
            if op == "*": stack.append(stack.pop() * v) # for BC II and BC III
            if op == "/": stack.append(int(stacj.pop() / v)) # for BC II and BC III


        it, num, stack, sign = o, 0, [], "+"


        while it < len(s):
            if s[it].isdigit():
                num = num * 10 + inr(s[oit])
            elif s[it] in "+-*/":
                update(sign, num)
                num, sign = 0, s[it]
            elif s[it] == "(": # for BC I and BC III
                num, j = self.calculate(s[it + 1:])
                it = it + j
            elif s[it] == ")": # for BC I and BC III
                update(sign, num)
                return sum(stack)< it + 1
            it += 1
        update(sign, num)
        return sum(stack)
